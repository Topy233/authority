package com.ejeg.controller;import com.ejeg.annotation.SystemLog;import com.ejeg.util.RRException;import com.ejeg.util.ResultUtil;import com.ejeg.util.ShiroUtils;import com.google.code.kaptcha.Producer;import org.apache.commons.lang.StringUtils;import org.apache.shiro.authc.*;import org.apache.shiro.subject.Subject;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.ResponseBody;import javax.imageio.ImageIO;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.awt.image.BufferedImage;/** * 登陆 * * @Author: Topy * @Date: 2019/10/13 10:13 */@Controllerpublic class LoginController {    @Autowired    private Producer captchaProducer = null;    @SystemLog("登录/")    @RequestMapping(value = "/")    public String login() {        return "login";    }    @SystemLog("登录/login")    @RequestMapping(value = "/login")    public String login2() {        return "login";    }    @SystemLog("登录/authority")    @RequestMapping(value = "/authority")    public String index2() {        return "login";    }    /**     * 登陆验证     *     * @param req     * @param username     * @param password     * @param vcode     * @return     */    @RequestMapping(value = "/sys/login", method = RequestMethod.POST)    @ResponseBody    public ResultUtil subLogin(HttpServletRequest req, String username, String password, String vcode) {/*        if(StringUtils.isEmpty(username)||StringUtils.isEmpty(password)||StringUtils.isEmpty(vcode)){            throw new RRException("参数不能为空");        }        if(!vcode.toLowerCase().equals(((String)req.getSession().getAttribute("kaptcha")).toLowerCase())){            return ResultUtil.error("验证码不正确");        }*/        try {            Subject subject = ShiroUtils.getSubject();            //md5加密            //password=DigestUtils.md5DigestAsHex(password.getBytes());            UsernamePasswordToken token = new UsernamePasswordToken(username, password);            subject.login(token);        } catch (UnknownAccountException e) {            return ResultUtil.error(e.getMessage());        } catch (IncorrectCredentialsException e) {            return ResultUtil.error(e.getMessage());        } catch (LockedAccountException e) {            return ResultUtil.error(e.getMessage());        } catch (AuthenticationException e) {            return ResultUtil.error("账户验证失败");        }        return ResultUtil.ok();    }    /**     * 验证码     *     * @param req     * @param resp     * @throws Exception     */    @RequestMapping("/sys/vcode")    public void vcode(HttpServletRequest req, HttpServletResponse resp) throws Exception {        String text = captchaProducer.createText();        BufferedImage image = captchaProducer.createImage(text);        req.getSession().setAttribute("kaptcha", text);        ImageIO.write(image, "JPEG", resp.getOutputStream());    }}